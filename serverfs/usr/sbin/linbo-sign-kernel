#!/usr/bin/python3
#
# create signed linbo kernel
# thomas@linuxmuster.net
# 20220719
#

import configparser
import constants
import os
import shutil
import sys

from functions import replaceInFile, printScript, subProc

# variable definitions
linbosys = constants.SYSDIR + '/linbo'
mokcnf = linbosys + '/mokconfig.cnf'
moktpl = constants.LINBOTPLDIR + '/mokconfig.cnf'
mokpriv = linbosys + '/mok.priv'
mokder = linbosys + '/mok.der'
mokpem = linbosys + '/mok.pem'
moklist = [mokcnf,mokpriv,mokder,mokpem]
mokrsa = '4096'
mokdays = '3650'
linbokrnl = constants.LINBODIR + '/linbo64'
linbofs = constants.LINBODIR + '/linbofs64.lz'
linbokrnl_signed = linbokrnl + '.signed'
linbofs_signed = linbofs + '.signed'


# functions

# create signing keys
def createKeys():
    # get values from setup.ini
    msg = 'Reading setup data '
    printScript(msg, '', False, False, True)
    setupini = constants.SETUPINI
    try:
        setup = configparser.RawConfigParser(
        delimiters=('='), inline_comment_prefixes=('#', ';'))
        setup.read(setupini)
        country = setup.get('setup', 'country')
        domainname = setup.get('setup', 'domainname')
        location = setup.get('setup', 'location')
        schoolname = setup.get('setup', 'schoolname')
        state = setup.get('setup', 'state')
        printScript(' Success!', '', True, True, False, len(msg))
    except:
        printScript(' Failed!', '', True, True, False, len(msg))
        sys.exit(1)
    # copy mokcnf template in place
    msg = 'Creating signing keys '
    printScript(msg, '', False, False, True)
    shutil.copyfile(moktpl, mokcnf)
    # replace placeholders
    replaceInFile(mokcnf, '@@country@@', country)
    replaceInFile(mokcnf, '@@domainname@@', domainname)
    replaceInFile(mokcnf, '@@location@@', location)
    replaceInFile(mokcnf, '@@schoolname@@', schoolname)
    replaceInFile(mokcnf, '@@state@@', state)
    # create keys
    subProc('openssl req -config ' + mokcnf + ' -new -x509 -newkey rsa:'
            + mokdays + ' -nodes -days ' + mokdays + ' -outform DER -keyout '
            + mokpriv + ' -out ' + mokder)
    subProc('ln -sf ' + mokder + ' ' + constants.LINBODIR + '/')
    # convert key to pem
    subProc('openssl x509 -in ' + mokder + ' -inform DER -outform PEM -out ' + mokpem)
    printScript(' Success!', '', True, True, False, len(msg))

# functions


# check if all files exist
if not all(list(map(os.path.isfile,moklist))):
    createKeys()

# sign kernel
msg = 'Signing linbo kernel '
printScript(msg, '', False, False, True)
subProc('sbsign --key ' + mokpriv + ' --cert ' + mokpem + ' ' + linbokrnl + ' --output ' + linbokrnl_signed)
shutil.copyfile(linbofs, linbofs_signed)
printScript(' Success!', '', True, True, False, len(msg))

#! /bin/bash
#
# thomas@linuxmuster.net
# 20220327
#

DESC="Multicast session for"

# lmn7 specific paths
source /usr/share/linuxmuster/linbo/helperfunctions.sh || exit 1
INTERFACE="$(LANG=C ip route show | grep ^default | awk '{ print $5 }')"
SERVERIP="$serverip"
DAEMON=$LINBOSHAREDIR/linbo-mcasthelper.sh

# Gracefully exit if the package has been removed.
test -x $DAEMON || exit 0

# read cmdline
action="$1"

# default values for udpcast
PORTBASE=9000
MINCLIENTS=16
MINSECONDS=60
MAXSECONDS=90

# override values for udpcast
. /etc/default/linbo-multicast || exit 1

# path to multicast filelist
MULTICASTLIST=$LINBODIR/multicast.list

images="$(find "$LINBODIR" -maxdepth 1 -name "*.cloop" ; \
  find "$LINBOIMGDIR" -maxdepth 2 -name "*.q[cd][oi][wf][2f]")"

create_multicast_list() {
  echo -n "Creating multicast.list"
  local i
  local image
  local p
  [ -e "$MULTICASTLIST" ] && mv $MULTICASTLIST $MULTICASTLIST.old
  [ -e "${MULTICASTLIST}.tmp" ] && rm -f "${MULTICASTLIST}.tmp"
  p=$PORTBASE
  for i in $images; do
    image="$(basename "$i")"
    echo "$image $SERVERIP:$p" >> $MULTICASTLIST
    echo "$i" "$SERVERIP:$p" >> ${MULTICASTLIST}.tmp
    p=$(( $p + 2 ))
  done
  echo .
}

start() {
  if [ -z "$images" ]; then
    echo "There exist no images yet!"
    rm -f "${MULTICASTLIST}*"
    exit 0
  fi

  create_multicast_list

  local imgdir
  local imgfile
  while read file serverport relax; do
    port="${serverport##*:}"
    if [ -s "$file" ]; then

      imgdir="$(dirname "$file")"
      imgfile="$(basename "$file")"
      cd "$imgdir"

      # start daemon stuff
      echo -n "Starting $DESC $imgfile ... "

      if screen -list | grep -qw "$imgfile.mcast"; then
        echo
        echo "Multicast for $imgfile is already running. Skipped!"
        continue
      fi

      LOGFILE="$LINBODIR/log/${imgfile}_mcast.log"

      screen -dmS "$imgfile.mcast" "$DAEMON" "$INTERFACE" "$port" "$MINCLIENTS" "$MINSECONDS" "$MAXSECONDS" "$imgfile" "$LOGFILE"
      sleep 1
      if ! screen -list | grep -qw "$imgfile.mcast"; then
        RC=1
        echo "failed!"
      else
        RC=0
        echo "done!"
      fi

    fi
  done < "${MULTICASTLIST}.tmp"
  rm -f "${MULTICASTLIST}.tmp"
}

stop(){

  local i
  local imgfile
  local pid
  for i in $images; do
    imgfile="$(basename "$i")"
    if screen -list | grep -qw "$imgfile.mcast"; then
      echo -n "Stopping $DESC $imgfile ... "
      pid="$(screen -list | grep -w "$imgfile.mcast" | awk -F\. '{ print $1 }' | awk '{ print $1 }')"
      kill $pid ; RC="$?"
      if [ "$RC" = "0" ]; then
        echo "done!"
      else
        echo "failed!"
      fi
    fi
  done
  local pids="$(screen -list | grep mcast | awk -F\. '{ print $1 }' | awk '{ print $1 }')"
  if [ -n "$pids" ]; then
    echo -n "Sending all remaining linbo-multicast processes the TERM signal ... "
    kill $pids ; RC="$?"
    if [ "$RC" = "0" ]; then
      echo "done!"
    else
      echo "failed!"
    fi
  fi
}

status(){
  screen -ls | grep -w mcast
}

case "$action" in
  start) start ;;
  stop) stop ;;
  restart)
    stop
    start ;;
  status) status ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}" >&2
    exit 1 ;;
esac

exit 0
